{"version":3,"sources":["logo.svg","com/Searchbar.js","service/api.js","com/Navbar.js","com/Guides/Add.js","com/Guides/List.js","com/Guides/Edit.js","com/Steps/Add.js","com/Guides/Like.js","com/Guides/Details.js","com/Landing.js","com/Auth/Login.js","com/Auth/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Searchbar","state","query","handleInputChange","_this","setState","search","value","_this2","this","react_default","a","createElement","Fragment","className","id","ref","input","onChange","type","name","placeholder","Component","service","axios","create","baseURL","process","withCredentials","signup","email","username","password","post","then","response","data","login","loggedin","get","getGuides","getGuide","console","log","concat","deleteGuide","delete","addGuide","editGuide","put","Navbar","react_router_dom","to","Searchbar_Searchbar","onClick","style","textDecoration","AddGuide","title","description","material","time","steps","rating","handleChange","event","target","Object","defineProperty","handleSubmit","preventDefault","props","history","push","onSubmit","React","List","guides","allGuides","map","el","_id","EditGuide","guideDetails","match","params","AddStep","displayForm","_event$target","guide","getProject","toggleForm","Like","likes","updated","updateLikes","prevState","GuideDetails","removeGuide","res","editBlock","user","owner","length","step","key","Like_Like","Steps_Add","Landing","List_List","Login","_this$state","setUser","Signup","App","loggedIn","getUser","Navbar_Navbar","react_router","exact","path","render","Landing_Landing","Add","Details","Edit","Auth_Login","Auth_Signup","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ffd13d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nexport default class Searchbar extends Component {\n     state = {\n          query: '',\n     }\n\n     handleInputChange = () => {\n          this.setState({\n               query: this.search.value\n          })\n     }\n\n     render() {\n          return (\n               <>\n                    <form className='nav-search'>\n                         <input className='search-bar'\n                              id='searchText'\n                              ref={input => this.search = input}\n                              onChange={this.handleInputChange}\n                              type='text'\n                              name='searchtext'\n                              placeholder='Search for something..'>\n                         </input>\n                    </form>\n               </>\n          )\n     }\n}\n","// const axios = require('axios')\nimport axios from \"axios\";\n\nconst service = axios.create({\n     baseURL: process.env.REACT_APP_SERVER_URL,\n     withCredentials: true\n});\n\nconst signup = (email, username, password) => {\n     return service\n          .post(\"/signup\", { email, username, password })\n          .then(response => response.data);\n};\n\nconst login = (username, password) => {\n     return service\n          .post(\"/login\", { username, password })\n          .then(response => response.data);\n};\n\nconst logout = () => {\n     return service.post(\"/logout\").then(response => response.data);\n};\n\nconst loggedin = () => {\n     return service.get(\"/loggedin\").then(response => response.data);\n};\n\nconst getGuides = () => {\n     return service\n          .get('/guides')\n          .then(response => response.data)\n}\n\nconst getGuide = (id) => {\n     console.log(id)\n     return service\n          .get(`/guides/${id}`)\n          .then(response => response.data)\n}\nconst deleteGuide = (id) => {\n\n     return service\n          .delete(`/guides/${id}`)\n          .then(response => response.data)\n}\n\nconst addGuide = (data) => {\n     return service\n          .post('/guides', data)\n          .then(response => response.data)\n}\n\n\nconst editGuide = (id, data) => {\n     return service\n          .put(`/guides/${id}`, data)\n          .then(response => response.data)\n}\n\n\n\n\nexport { signup, login, logout, loggedin, addGuide, getGuides, getGuide, deleteGuide, editGuide };\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Searchbar from './Searchbar'\nimport { loggedin, login, logout } from '../service/api'\n\n\nexport default class Navbar extends Component {\n     state = {\n          query: '',\n     }\n\n     handleInputChange = () => {\n          this.setState({\n               query: this.search.value\n          })\n     }\n\n     render() {\n          return (\n               <>\n                    <nav className='nav-style'>\n                         <ul>\n                              <li className='nav-app-logo'>\n                                   <Link to='/' id='logo' >SALVE</Link></li>\n\n                              <Searchbar />\n                              {loggedin ?\n                                   <button onClick='logout'>\n                                        <Link\n                                             to=\"/login\"\n                                             style={{ textDecoration: \"none\" }}>\n                                             Log out\n                                   </Link></button>\n                                   : <button><Link\n                                        to=\"/login\"\n                                        style={{ textDecoration: \"none\" }}>\n                                        Log in\n                                   </Link></button>}\n                         </ul>\n                    </nav>\n               </>\n          )\n     }\n}\n\n","import React from \"react\";\nimport axios from \"axios\";\nimport { addGuide } from '../../service/api'\n\nclass AddGuide extends React.Component {\n     state = {\n          title: \"\",\n          description: \"\",\n          material: [],\n          time: 0,\n          steps: [],\n          rating: 0\n     };\n\n\n     handleChange = event => {\n          const name = event.target.name;\n          const value = event.target.value;\n\n          this.setState({\n               [name]: value\n          });\n     };\n\n     handleSubmit = event => {\n          event.preventDefault();\n\n          const data = {\n               title: this.state.title,\n               description: this.state.description,\n               material: this.state.material,\n               time: this.state.time,\n               rating: this.state.rating,\n               steps: this.state.steps\n          }\n\n          addGuide(data)\n               .then((response) => {\n                    this.props.history.push('/guides')\n               })\n          // this.props.getData();\n          this.setState({\n               title: \"\",\n               description: \"\",\n               material: [],\n               time: 0,\n               rating: 0,\n               steps: []\n          })\n     };\n     ;\n\n     render() {\n          return (\n               <div>\n                    <form onSubmit={this.handleSubmit}>\n                         <div className=\"form-group\">\n                              <label>title:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.title}\n                                   onChange={this.handleChange}\n                                   name=\"title\"\n                                   type=\"text\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>description:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.description}\n                                   onChange={this.handleChange}\n                                   type=\"text\"\n                                   name=\"description\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>material:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.material}\n                                   onChange={this.handleChange}\n                                   type=\"array\"\n                                   name=\"material\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>time:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.time}\n                                   onChange={this.handleChange}\n                                   type=\"number\"\n                                   name=\"time\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>rating:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.rating}\n                                   onChange={this.handleChange}\n                                   type=\"number\"\n                                   name=\"rating\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>steps:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.steps}\n                                   onChange={this.handleChange}\n                                   type=\"array\"\n                                   name=\"steps\"\n                              />\n                         </div>\n                         <input\n                              className=\"btn-submit-guide\"\n                              type=\"submit\"\n                              value=\"Create Guide\"\n                         />\n                    </form>\n               </div>\n          );\n     }\n}\n\nexport default AddGuide;\n","import React, { Component } from 'react'\nimport { getGuides } from '../../service/api'\nimport { Link } from 'react-router-dom'\n\nexport default class List extends Component {\n     state = {\n          guides: []\n     }\n\n     allGuides = () => {\n          getGuides()\n               .then(guides => {\n                    this.setState({\n                         guides: guides\n                    })\n               })\n     }\n\n     componentDidMount() {\n          this.allGuides()\n     }\n\n     render() {\n          console.log(this.state.guides)\n          return (\n               <>\n                    <div className='guide-container'>\n                         {this.state.guides.map(el =>\n                              (<Link\n                                   className='guide'\n                                   to={`/guides/${el._id}`}><p className='guide-title'>\n                                        {el.title}</p>\n                              </Link>))}\n                    </div >\n                    <Link to='/guides/create'>Create Guide</Link>\n               </>\n          )\n     }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { editGuide } from '../../service/api'\nimport { getGuide } from '../../service/api'\n\n\nclass EditGuide extends React.Component {\n     state = {\n          title: \"\",\n          description: \"\",\n          material: [],\n          time: 0,\n          steps: [],\n          rating: 0\n     };\n\n\n     guideDetails = () => {\n          const id = this.props.match.params.id;\n          getGuide(id)\n               .then(response => {\n                    this.setState({\n                         title: response.title,\n                         description: response.description,\n                         material: response.material,\n                         time: response.time,\n                         //steps: [],\n                         rating: response.rating\n                    });\n               });\n     };\n\n\n     componentDidMount() {\n          this.guideDetails();\n     }\n\n\n     handleSubmit = event => {\n          event.preventDefault();\n\n          const id = this.props.match.params.id;\n          const data = {\n               title: this.state.title,\n               description: this.state.description,\n               material: this.state.material,\n               time: this.state.time,\n               rating: this.state.rating,\n               steps: this.state.steps\n          }\n          editGuide(id, data)\n               .then((response) => {\n                    this.props.history.push(`/guides/${id}`)\n               });\n     };\n\n     handleChange = event => {\n          const name = event.target.name;\n          const value = event.target.value;\n\n          this.setState({ [name]: value });\n     };\n\n     render() {\n          return (\n               <div>\n                    <hr />\n                    <h3>Edit Guide</h3>\n                    <form onSubmit={this.handleSubmit}>\n                         <div className=\"form-group\">\n                              <label>title:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.title}\n                                   onChange={this.handleChange}\n                                   name=\"title\"\n                                   type=\"text\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>description:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.description}\n                                   onChange={this.handleChange}\n                                   type=\"text\"\n                                   name=\"description\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>material:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.material}\n                                   onChange={this.handleChange}\n                                   type=\"array\"\n                                   name=\"material\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>time:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.time}\n                                   onChange={this.handleChange}\n                                   type=\"number\"\n                                   name=\"time\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>rating:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.rating}\n                                   onChange={this.handleChange}\n                                   type=\"number\"\n                                   name=\"rating\"\n                              />\n                         </div>\n                         <div className=\"form-group\">\n                              <label>steps:</label>\n                              <input\n                                   className=\"form-control\"\n                                   value={this.state.steps}\n                                   onChange={this.handleChange}\n                                   type=\"array\"\n                                   name=\"steps\"\n                              />\n                         </div>\n                         <input\n                              className=\"btn btn-primary\"\n                              type=\"submit\"\n                              value=\"save\"\n                         />\n                    </form>\n               </div>\n          );\n     }\n}\n\nexport default EditGuide;\n","import React from \"react\";\nimport axios from \"axios\";\n\nclass AddStep extends React.Component {\n     state = {\n          title: \"\",\n          description: \"\",\n          material: '',\n          displayForm: false\n     };\n\n     handleChange = event => {\n          const { name, value } = event.target;\n          this.setState({ [name]: value });\n     };\n\n     handleSubmit = event => {\n          event.preventDefault();\n\n          const guide = this.props.guide._id;\n          axios\n               .post(\n                    process.env.REACT_APP_SERVER_URL + \"steps\",\n                    {\n                         title: this.state.title,\n                         description: this.state.description,\n                         guide\n                    },\n                    { withCredentials: true }\n               )\n               .then(() => {\n                    this.props.getProject();\n                    this.setState({ title: \"\", description: \"\", displayForm: false });\n               });\n     };\n\n     toggleForm = () => {\n          this.setState({\n               displayForm: !this.state.displayForm\n          });\n     };\n\n     render() {\n          return (\n               <div>\n                    <hr />\n                    <button className=\"btn\" onClick={this.toggleForm}>\n                         Add Step\n        </button>\n                    {this.state.displayForm && (\n                         <div>\n                              <form onSubmit={this.handleSubmit}>\n                                   <div className=\"form-group\">\n                                        <label>title:</label>\n                                        <input\n                                             className=\"form-control\"\n                                             value={this.state.title}\n                                             onChange={this.handleChange}\n                                             name=\"title\"\n                                             type=\"text\"\n                                        />\n                                   </div>\n                                   <div className=\"form-group\">\n                                        <label>description:</label>\n                                        <input\n                                             className=\"form-control\"\n                                             value={this.state.description}\n                                             onChange={this.handleChange}\n                                             type=\"text\"\n                                             name=\"description\"\n                                        />\n                                   </div>\n                                   <input\n                                        className=\"btn btn-primary\"\n                                        type=\"submit\"\n                                        value=\"confirm\"\n                                   />\n                              </form>\n                         </div>\n                    )}\n               </div>\n          );\n     }\n}\n\nexport default AddStep;\n","import React, { Component } from 'react'\n\nexport default class Like extends Component {\n\n     state = {\n          likes: 0,\n          updated: false\n     }\n     updateLikes = () => {\n          if (!this.state.updated) {\n               this.setState((prevState, props) => {\n                    return {\n                         likes: prevState.likes + 1,\n                         updated: true\n                    }\n               })\n          } else {\n               this.setState((prevState, props) => {\n                    return {\n                         likes: prevState.likes - 1,\n                         updated: false\n                    }\n               })\n          }\n     }\n     render() {\n          return (\n               <div className='like-btn'>\n                    <i className='fa fa-heart' onClick={this.updateLikes}> {this.state.likes}</i>\n               </div>\n          )\n     }\n}","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport EditGuide from \"./Edit\";\nimport axios from \"axios\";\nimport { getGuide } from '../../service/api'\nimport { deleteGuide } from '../../service/api'\nimport AddStep from '../Steps/Add'\nimport Like from './Like'\n\nclass GuideDetails extends React.Component {\n     state = {\n          guide: {},\n     };\n\n\n\n     guideDetails = () => {\n          const id = this.props.match.params.id;\n          getGuide(id)\n               .then(response => {\n                    this.setState({\n                         guide: response\n                    });\n               });\n     };\n\n\n     removeGuide = () => {\n          const id = this.props.match.params.id;\n\n          deleteGuide(id).then(res => {\n               // redirects to /guides\n               console.log(res)\n               this.props.history.push(\"/\");\n\n          });\n     };\n\n     componentDidMount() {\n          this.guideDetails();\n     }\n\n     render() {\n\n          const { guide } = this.state;\n          console.log(guide, \"this is the guide details\")\n          //console.log(this.props);\n\n          let editBlock = <></>;\n\n          if (this.props.user && this.props.user._id === guide.owner) {\n               editBlock = (\n                    <div>\n                         {/* <EditProject guide={guide} getDetails={this.getProject} /> */}\n                         {/* <button\n                              style={{ marginTop: \"10px\" }}\n                              className=\"btn btn-danger\"\n                              onClick={this.removeGuide}\n                         >\n                              Delete guide\n          </button> */}\n                    </div>\n               );\n          }\n          console.log(this.state.guide)\n          return (\n\n               < >\n                    {guide && <div className='guide-layout'> <h1>{guide.title}</h1>\n                         <p>{guide.description}</p>\n                         {/* <Link to={`/guides/edit/${guide._id}`} > Edit</Link> */}\n                         {/* <button onClick={this.removeGuide}>Remove</button> */}\n                         {guide.steps && guide.steps.length > 0 && <h3>Steps</h3>}\n                         {guide.steps &&\n                              guide.steps.map(step => {\n                                   return (\n                                        <div key={step._id}>\n                                             <Link to={`/steps/${step._id}`}>{step.title}</Link>\n                                        </div>\n                                   );\n                              })}\n                         <section className='guide-desc-footer'>\n                              <Like /><p id='guide-time'>Time: {guide.time} minute/s</p>\n                         </section>\n\n                         {editBlock}\n\n                         <AddStep guide={guide} getGuide={this.getGuide} />\n\n                         <Link to=\"/guides\">Back</Link> </div>}\n               </>\n          );\n     }\n}\n\nexport default GuideDetails;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport List from './Guides/List'\n\n\nexport default class Landing extends Component {\n     render() {\n          return (\n               <>\n                    {/* <h3 id='landing-title'>This is a placeholder title.</h3> */}\n                    <div id='landing-banner'><h1>Welcome</h1></div>\n                    <section className='article-section'>What do we offer?</section>\n                    <div id='landing-sec2'>\n                         <List />\n                         <Link to='/guides'>All Guides</Link>\n                    </div>\n               </>)\n     }\n}\n","import React from \"react\";\nimport { login } from \"../../service/api\";\nimport { Link } from 'react-router-dom'\n\nclass Login extends React.Component {\n     state = {\n          username: \"\",\n          password: \"\"\n     };\n\n     handleChange = event => {\n          const { name, value } = event.target;\n\n          this.setState({ [name]: value });\n     };\n\n     handleSubmit = event => {\n          event.preventDefault();\n\n          const { username, password } = this.state;\n\n          login(username, password).then(user => {\n               this.props.setUser(user);\n               this.setState({\n                    username: \"\",\n                    password: \"\"\n               });\n          });\n     };\n\n     render() {\n          return (\n               <div>\n                    <form onSubmit={this.handleSubmit}>\n                         <div>\n                              <label>username</label>\n                              <input\n                                   type=\"text\"\n                                   name=\"username\"\n                                   onChange={this.handleChange}\n                                   value={this.state.username}\n                              />\n                         </div>\n                         <div>\n                              <label>password</label>\n                              <input\n                                   type=\"password\"\n                                   name=\"password\"\n                                   onChange={this.handleChange}\n                                   value={this.state.password}\n                              />\n                         </div>\n                         <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n                              No account yet?\n                         </Link>\n                         <input type=\"submit\" value=\"login\" />\n                    </form>\n               </div>\n          );\n     }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { signup } from \"../../service/api\";\n\nclass Signup extends React.Component {\n     state = {\n          email: \"\",\n          username: \"\",\n          password: \"\"\n     };\n\n     handleChange = event => {\n          const { name, value } = event.target;\n\n          this.setState({\n               [name]: value\n          });\n     };\n\n     handleSubmit = event => {\n          event.preventDefault();\n\n          const { email, username, password } = this.state;\n\n          signup(email, username, password).then(user => {\n               this.props.setUser(user);\n               this.setState({\n                    email: \"\",\n                    username: \"\",\n                    password: \"\"\n               });\n          });\n     };\n\n     render() {\n          return (\n               <div>\n                    <form onSubmit={this.handleSubmit}>\n                         <div>\n                              <label>e-mail: </label>\n                              <input\n                                   value={this.state.email}\n                                   onChange={this.handleChange}\n                                   type=\"text\"\n                                   name=\"email\"\n                              />\n                         </div>\n                         <div>\n                              <label>username: </label>\n                              <input\n                                   value={this.state.username}\n                                   onChange={this.handleChange}\n                                   type=\"text\"\n                                   name=\"username\"\n                              />\n                         </div>\n                         <div>\n                              <label>password: </label>\n                              <input\n                                   value={this.state.password}\n                                   onChange={this.handleChange}\n                                   type=\"password\"\n                                   name=\"password\"\n                              />\n                         </div>\n                         <input type=\"submit\" value=\"signup\" />\n                    </form>\n               </div>\n          );\n     }\n}\n\nexport default Signup;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './com/Navbar'\nimport AddGuide from './com/Guides/Add'\nimport List from './com/Guides/List'\nimport { Switch, Route } from 'react-router-dom'\nimport GuideDetails from './com/Guides/Details'\nimport EditGuide from \"../src/com/Guides/Edit\";\nimport { addGuide, loggedin } from './service/api';\nimport Landing from './com/Landing'\nimport Login from './com/Auth/Login'\nimport Signup from './com/Auth/Signup'\n\n\n\nexport default class App extends React.Component {\n  state = {\n    loggedIn: null\n  }\n\n  setUser = user => {\n    this.setState({\n      loggedIn: user\n    });\n  };\n\n  getUser = () => {\n    loggedin().then(user => {\n      this.setState({\n        loggedIn: user\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Navbar setUser={this.setUser} loggedIn={this.state.loggedIn} />\n\n\n\n        <Switch>\n          <Route\n            exact path='/'\n            render={() => <><Landing /></>}\n\n          />\n          <Route\n            exact path='/guides/create'\n            render={(props) => <AddGuide {...props} />}\n\n          />\n          <Route\n            exact path='/guides'\n            render={() => <><List /> </>}\n\n          />\n          <Route\n            exact path='/guides/:id'\n            render={(props) => <GuideDetails {...props} />}\n          />\n          <Route\n            exact path='/guides/edit/:id'\n            render={(props) => <EditGuide {...props} />}\n\n          />\n          <Route\n            exact path='/login'\n            render={() => <Login setUser={this.setUser} />}\n\n\n          />\n          <Route\n            exact path='/signup'\n            render={() => <Signup setUser={this.setUser} />}\n\n          />\n\n        </Switch >\n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bulma/css/bulma.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}